<?php

/*
 * CODE
 * {{modelName}} Controller
*/

namespace App\Http\Controllers\{{modelName}};

use Exception;
use App\Models\{{modelName}};
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;
use App\Http\Controllers\ApiController;
use Illuminate\Validation\ValidationException;

/**
 * @access  public
 *
 * @version 1.0
 */
class {{modelName}}Controller extends ApiController
{

    /**
     * @return JsonResponse
     */
    public function index(): JsonResponse
    {
        ${{modelNamePluralLowerCase}} = {{modelName}}::all();

        return $this->showAll(${{modelNamePluralLowerCase}});
    }

    /**
     * @param Request $request
     *
     * @return JsonResponse
     *
     * @throws ValidationException
     */
    public function store(Request $request): JsonResponse
    {
        $this->validate($request, {{modelName}}::rules());
        ${{modelNameSingularLowerCase}} = {{modelName}}::create($request->all());

        return $this->showOne(${{modelNameSingularLowerCase}});
    }

    /**
     * @param {{modelName}} ${{modelNameSingularLowerCase}}
     *
     * @return JsonResponse
     */
    public function show({{modelName}} ${{modelNameSingularLowerCase}}): JsonResponse
    {
        return $this->showOne(${{modelNameSingularLowerCase}});
    }

    /**
     * @param Request $request
     * @param {{modelName}} ${{modelNameSingularLowerCase}}
     *
     * @return JsonResponse
     *
     * @throws ValidationException
     */
    public function update(Request $request, {{modelName}} ${{modelNameSingularLowerCase}}): JsonResponse
    {
        $this->validate($request, {{modelName}}::rules());
        ${{modelNameSingularLowerCase}}->fill($request->all());
        if (${{modelNameSingularLowerCase}}->isClean()) {
            return $this->errorResponse('A different value must be specified to update', 422);
        }

        ${{modelNameSingularLowerCase}}->save();

        return $this->showOne(${{modelNameSingularLowerCase}});
    }

    /**
     * @param {{modelName}} ${{modelNameSingularLowerCase}}
     *
     * @return JsonResponse
     *
     * @throws Exception
     */
    public function destroy({{modelName}} ${{modelNameSingularLowerCase}}): JsonResponse
    {
        ${{modelNameSingularLowerCase}}->delete();

        return $this->showMessage('Record deleted successfully');
    }
}
